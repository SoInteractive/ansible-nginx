---
- name: Copy the nginx configuration file
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_conf_dir }}/nginx.conf"
    backup: yes
  notify: restart nginx

- name: Remove old Diffie-Hellman params
  file:
    path: "{{ nginx_conf_dir }}/dhparam.pem"
    state: absent
  when: nginx_dh_remove_old

- name: Create {{ nginx_dh_bits }}bit Diffie-Hellman
  command: "openssl dhparam {{ '-dsaparam' if nginx_dh_bits > 2048 else '' }} -out {{ nginx_conf_dir }}/dhparam.pem {{ nginx_dh_bits }}"
  args:
    creates: "{{ nginx_conf_dir }}/dhparam.pem"
  when: nginx_ssl_enable

- name: Letsencrypt snippet
  template:
    src: snippets/letsencrypt.conf.j2
    dest: "{{ nginx_conf_dir }}/snippets/letsencrypt.conf"
  when: nginx_ssl_enable

- name: Create errorfiles dir
  file:
    path: "{{ nginx_data_dir }}/custom_error_pages"
    state: directory

- name: Copy errorfiles
  template:
    src: "error_codes.j2"
    dest: "{{ nginx_data_dir }}/custom_error_pages/nginx_{{ item.code }}.html"
  with_items: "{{ nginx_errors }}"

- name: Create snippets
  template:
    src: "snippets/{{ item }}.j2"
    dest: "{{ nginx_conf_dir }}/snippets/{{ item }}"
  with_items:
  - ssl.conf
  - headers.conf
  - proxy.conf
  - errors.conf
  notify: restart nginx

- name: Create sites configurations
  template:
    src: "{{ item.value.template | default('site.conf.j2') }}"
    dest: "{{ nginx_conf_dir }}/sites-available/{{ item.key }}"
    backup: yes
  with_dict: "{{ nginx_sites }}"
  register: confgen
  notify: restart nginx

- name: Create links for sites-enabled
  file:
    state: link
    src: "{{ nginx_conf_dir }}/sites-available/{{ item.key }}"
    dest: "{{ nginx_conf_dir }}/sites-enabled/{{ item.key }}"
  with_dict: "{{ nginx_sites }}"
  when: item.key not in nginx_remove_sites
  notify: restart nginx

- name: Create password file
  htpasswd:
    path: /etc/nginx/htpasswd
    name: "{{ nginx_basic_auth_user }}"
    password: "{{ nginx_basic_auth_pass }}"
    state: present
  when: nginx_basic_auth_pass != "" and nginx_basic_auth_user != ""

- name: Check if config files are ok
  command: "nginx -t -c {{ nginx_conf_dir }}/nginx.conf"
  changed_when: false
  when: confgen.changed
  tags: skip_ansible_lint
